create table ascvd_recommendations (
    "ID" number generated by default on null as identity minvalue 1 maxvalue 9999999999999999999999999999 increment by 1 start with 1 cache 20 noorder nocycle nokeep noscale not null enable,
    "TITLE" varchar2(255 char) not null enable,
    "DESCRIPTION" varchar2(4000 char) not null enable,
    "ITEM_CLASSES" varchar2(255 char),
    "SELECTION" varchar2(255 char),
    "ICON_CLASS" varchar2(255 char),
    "ICON_HTML" varchar2(255 char),
    "ACTIONS" varchar2(255 char),
    "MISC" varchar2(255),
    constraint "ASCVD_RECOMMENDATIONS_PK" primary key ("ID") using index enable
);

insert into ascvd_recommendations (
    id,
    title,
    description,
    item_classes,
    selection,
    icon_class,
    icon_html,
    actions,
    misc
) values (
    1,
    'Exercise',
    'Regular physical activity helps you control your weight, blood pressure, and cholesterol. 
Be sure to consult your doctor before starting an exercise program.',
    '',
    '',
    'fa fa-lg fa-check-circle u-success-text',
    '',
    '',
    ''
);
insert into ascvd_recommendations (
    id,
    title,
    description,
    item_classes,
    selection,
    icon_class,
    icon_html,
    actions,
    misc
) values (
    4,
    'Take an aspirin every day',
    'Taking an aspirin daily can reduce your risk of heart attacks and strokes, or reduce the severity of such an event. 
Your doctor can provide guidance on the recommended daily dose thats right for you.',
    '',
    '',
    'fa fa-lg fa fa-lg fa-exclamation-circle-o u-danger-text',
    '',
    '',
    ''
);
insert into ascvd_recommendations (
    id,
    title,
    description,
    item_classes,
    selection,
    icon_class,
    icon_html,
    actions,
    misc
) values (
    2,
    'Quit smoking',
    'Your risk of heart attack or stroke decreases soon after you quit smoking.
Blood flow to the heart and brain is vital, and increases almost immediately after your last cigarette.
Additionally, the rate of plaque build-up in your blood vessels decreases.
Ask your doctor about smoking cessation aids proven to be effective.',
    '',
    '',
    'fa fa-lg fa-exclamation-triangle u-warning-text',
    '',
    '',
    ''
);
insert into ascvd_recommendations (
    id,
    title,
    description,
    item_classes,
    selection,
    icon_class,
    icon_html,
    actions,
    misc
) values (
    3,
    'Consider a statin',
    'Statins lower LDL (bad) cholesterol and raise HDL (good) cholesterol in your blood. 
Improved cholesterol levels decrease your risk for a heart attack or a stroke. 
Discuss the benefits and risks of statins with your doctor.',
    '',
    '',
    'fa fa-lg fa fa-lg fa-exclamation-circle-o u-danger-text',
    '',
    '',
    ''
);
insert into ascvd_recommendations (
    id,
    title,
    description,
    item_classes,
    selection,
    icon_class,
    icon_html,
    actions,
    misc
) values (
    5,
    'Control your blood pressure',
    'High blood pressure stresses your bodys blood vessels, weakening them and greatly increasing your risk for heart attack or stroke. 
    Blood pressure medications, weight control, exercise, and managing your sodium intake can all have positive impact on your blood pressure.',
    '',
    '',
    'fa fa-lg fa fa-lg fa-exclamation-circle-o u-danger-text',
    '',
    '',
    ''
);

create or replace package ascvd_risk_calculator as function computetenyearscore(age in number, totalcholesterol in number, hdl in number, systolicbloodpressure in number, hypertensive in number, smoker in number, diabetic in number, race in varchar2, gender in varchar2) return number;
function computelifetimerisk(age in number, totalcholesterol in number, hdl in number, systolicbloodpressure in number, hypertensive in number, smoker in number, diabetic in number, race in varchar2, gender in varchar2) return number;
function computelowesttenyear(age in number, race in varchar2, gender in varchar2) return number;
function computelowestlifetime(age in number, race in varchar2, gender in varchar2) return number;
function computepotentialrisk(reductions in varchar2, score in varchar2, age in number, totalcholesterol in number, hdl in number, systolicbloodpressure in number, hypertensive in number, smoker in number, diabetic in number, race in varchar2, gender in varchar2) return number;
function lowestpossiblerisk(age in number, race in varchar2, gender in varchar2) return number;
end ascvd_risk_calculator;
/

create or replace package ascvd_risk_calculator as
    function computetenyearscore(
        age in number,
        totalcholesterol in number,
        hdl in number,
        systolicbloodpressure in number,
        hypertensive in number,
        smoker in number,
        diabetic in number,
        race in varchar2,
        gender in varchar2
    ) return number;
    function computelifetimerisk(
        age in number,
        totalcholesterol in number,
        hdl in number,
        systolicbloodpressure in number,
        hypertensive in number,
        smoker in number,
        diabetic in number,
        race in varchar2,
        gender in varchar2
    ) return number;
    function computelowesttenyear(
        age in number,
        race in varchar2,
        gender in varchar2
    ) return number;
    function computelowestlifetime(
        age in number,
        race in varchar2,
        gender in varchar2
    ) return number;
    function computepotentialrisk(
        reductions in varchar2,
        score in varchar2,
        age in number,
        totalcholesterol in number,
        hdl in number,
        systolicbloodpressure in number,
        hypertensive in number,
        smoker in number,
        diabetic in number,
        race in varchar2,
        gender in varchar2
    ) return number;
    function lowestpossiblerisk(
        age in number,
        race in varchar2,
        gender in varchar2
    ) return number;
end ascvd_risk_calculator;
/

create or replace package body ascvd_risk_calculator as
    function computetenyearscore(
        age in number,
        totalcholesterol in number,
        hdl in number,
        systolicbloodpressure in number,
        hypertensive in number,
        smoker in number,
        diabetic in number,
        race in varchar2,
        gender in varchar2
    ) return number is
        lnage        number := ln(age);
        lntotalchol  number := ln(totalcholesterol);
        lnhdl        number := ln(hdl);
        trlnsbp      number := case
            when hypertensive = 1 then
                ln(systolicbloodpressure)
            else
                0
        end;
        ntlnsbp      number := case
            when hypertensive = 0 then
                ln(systolicbloodpressure)
            else
                0
        end;
        agetotalchol number := lnage * lntotalchol;
        agehdl       number := lnage * lnhdl;
        agetsbp      number := lnage * trlnsbp;
        agentsbp     number := lnage * ntlnsbp;
        agesmoke     number := case
            when smoker = 1 then
                lnage
            else
                0
        end;
        isaa         boolean := (race = 'aa');
        ismale       boolean := (gender = 'male');
        s010ret      number := 0;
        mnxbret      number := 0;
        predictret   number := 0;
        function calculatescore return number is
        begin
            if isaa and not ismale then
                s010ret := 0.95334;
                mnxbret := 86.6081;
                predictret := 17.1141 * lnage + 0.9396 * lntotalchol + -18.9196 * lnhdl + 4.4748 * agehdl + 29.2907 * trlnsbp + -6.4321 * agetsbp + 27.8197 * ntlnsbp + -6.0873 * agentsbp + 0.6908 * case
                    when smoker = 1 then
                        1
                    else
                        0
                end + 0.8738 * case
                    when diabetic = 1 then
                        1
                    else
                        0
                end;
            elsif not isaa and not ismale then
                s010ret := 0.96652;
                mnxbret := -29.1817;
                predictret := -29.799 * lnage + 4.884 * power(lnage, 2) + 13.54 * lntotalchol + -3.114 * agetotalchol + -13.578 * lnhdl + 3.149 * agehdl + 2.019 * trlnsbp + 1.957 * ntlnsbp + 7.574 * case
                    when smoker = 1 then
                        1
                    else
                        0
                end + -1.665 * agesmoke + 0.661 * case
                    when diabetic = 1 then
                        1
                    else
                        0
                end;
            elsif isaa and ismale then
                s010ret := 0.89536;
                mnxbret := 19.5425;
                predictret := 2.469 * lnage + 0.302 * lntotalchol + -0.307 * lnhdl + 1.916 * trlnsbp + 1.809 * ntlnsbp + 0.549 * case
                    when smoker = 1 then
                        1
                    else
                        0
                end + 0.645 * case
                    when diabetic = 1 then
                        1
                    else
                        0
                end;
            else
                s010ret := 0.91436;
                mnxbret := 61.1816;
                predictret := 12.344 * lnage + 11.853 * lntotalchol + -2.664 * agetotalchol + -7.99 * lnhdl + 1.769 * agehdl + 1.797 * trlnsbp + 1.764 * ntlnsbp + 7.837 * case
                    when smoker = 1 then
                        1
                    else
                        0
                end + -1.795 * agesmoke + 0.658 * case
                    when diabetic = 1 then
                        1
                    else
                        0
                end;
            end if;
            return round((1 - power(s010ret, exp(predictret - mnxbret))) * 100 * 10) / 10;
        end;
    begin
        if age < 40 or age > 79 then
            return null;
        else
            return calculatescore();
        end if;
    end; ---
    function computelifetimerisk(
        age in number,
        totalcholesterol in number,
        hdl in number,
        systolicbloodpressure in number,
        hypertensive in number,
        smoker in number,
        diabetic in number,
        race in varchar2,
        gender in varchar2
    ) return number is
        ascvdrisk      number := 0;
 -- Define the parameters
        major          number;
        major2         number := 0;
        major1         number := 0;
        elevated_score number := 0;
        not_optimal    number := 0;
        all_optimal    number := 0;
        notoptimal     number;
        alloptimal     number;
        elevated       number;
    begin
        if age < 20 or age > 59 then
            return null;
        end if;
 -- Define the parameters based on gender
        if gender = 'male' then
            major2 := 69;
            major1 := 50;
            elevated := 46;
            notoptimal := 36;
            alloptimal := 5;
        elsif gender = 'female' then
            major2 := 50;
            major1 := 39;
            elevated := 39;
            notoptimal := 27;
            alloptimal := 8;
        end if;
 -- Calculate the values
        begin
            major := (case when totalcholesterol >= 240 then 1 else 0 end) + ((case when systolicbloodpressure >= 160 then 1 else 0 end) + (case when hypertensive = 1 then 1 else 0 end)) + (case when smoker = 1 then 1 else 0 end) + (case when diabetic = 1 then 1 else 0 end);
            elevated_score := ((case when totalcholesterol >= 200 and totalcholesterol < 240 then 1 else 0 end) + case when (case when systolicbloodpressure >= 140 and systolicbloodpressure < 160 and hypertensive = 0 then 1 else 0 end) >= 1 then 1 else 0 end) * (case when major = 0 then 1 else 0 end);
            all_optimal := ((case when totalcholesterol < 180 then 1 else 0 end) + (case when systolicbloodpressure < 120 then 1 else 0 end) * case when (case when hypertensive = 0 then 1 else 0 end) = 2 then 1 else 0 end) * (case when major = 0 then 1 else 0 end);
            not_optimal := ((case when totalcholesterol >= 180 and totalcholesterol < 200 then 1 else 0 end) + (case when systolicbloodpressure >= 120 and systolicbloodpressure < 140 and hypertensive = 0 then 1 else 0 end)) * (case when elevated_score = 0 then 1 else 0 end) * case when (case when major = 0 then 1 else 0 end) >= 1 then 1 else 0 end;
            if major > 1 then
                ascvdrisk := major2;
            elsif major = 1 then
                ascvdrisk := major1;
            elsif elevated_score = 1 then
                ascvdrisk := elevated;
            elsif not_optimal = 1 then
                ascvdrisk := notoptimal;
            elsif all_optimal = 1 then
                ascvdrisk := alloptimal;
            end if;
 --   raise_application_error(-20001, 'ascvdRisk: ' || ascvdRisk || ' major: ' || major || ' allOptimal: ' || allOptimal || ' elevated: ' || elevated || ' notOptimal: ' || notOptimal);
        end;
        return ascvdrisk;
    end; ---
    function computelowesttenyear(
        age in number,
        race in varchar2,
        gender in varchar2
    ) return number is
        systolicbloodpressure number := 90;
        totalcholesterol      number := 130;
        hdl                   number := 100;
        diabetic              number := 0;
        smoker                number := 0;
        hypertensive          number := 0;
    begin
        return ascvd_risk_calculator.computetenyearscore(age, totalcholesterol, hdl, systolicbloodpressure, hypertensive, smoker, diabetic, race, gender);
    end; ---
    function computelowestlifetime(
        age in number,
        race in varchar2,
        gender in varchar2
    ) return number is
        systolicbloodpressure number := 90;
        totalcholesterol      number := 130;
        hdl                   number := 100;
        diabetic              number := 0;
        smoker                number := 0;
        hypertensive          number := 0;
    begin
        return ascvd_risk_calculator.computelifetimerisk(age, totalcholesterol, hdl, systolicbloodpressure, hypertensive, smoker, diabetic, race, gender);
    end; ---
    function computepotentialrisk(
        reductions in varchar2,
        score in varchar2,
        age in number,
        totalcholesterol in number,
        hdl in number,
        systolicbloodpressure in number,
        hypertensive in number,
        smoker in number,
        diabetic in number,
        race in varchar2,
        gender in varchar2
    ) return number is
        computedscore     number;
        lowestscore       number;
        reducedtotalscore number := 0;
        sysbpcalculation  number;
        reduction         varchar2(255);
        start_pos         number := 1;
        comma_pos         number;
    begin
        if score = 'ten' then
            computedscore := ascvd_risk_calculator.computetenyearscore(age, totalcholesterol, hdl, systolicbloodpressure, hypertensive, smoker, diabetic, race, gender);
            lowestscore := ascvd_risk_calculator.computelowesttenyear(age, race, gender);
        else
            computedscore := ascvd_risk_calculator.computelifetimerisk(age, totalcholesterol, hdl, systolicbloodpressure, hypertensive, smoker, diabetic, race, gender);
            lowestscore := ascvd_risk_calculator.computelowestlifetime(age, race, gender);
        end if;
        comma_pos := instr(reductions, ',', start_pos);
        while comma_pos > 0 loop
            reduction := substr(reductions, start_pos, comma_pos - start_pos);
            if reduction = 'statin' then
                reducedtotalscore := reducedtotalscore + computedscore * 0.25;
            elsif reduction = 'sysBP' then
                sysbpcalculation := computedscore - computedscore * power(0.7, ((systolicbloodpressure - 140) / 10));
                reducedtotalscore := reducedtotalscore + sysbpcalculation;
            elsif reduction = 'aspirin' then
                reducedtotalscore := reducedtotalscore + computedscore * 0.1;
            elsif reduction = 'smoker' then
                reducedtotalscore := reducedtotalscore + computedscore * 0.15;
            end if;
            start_pos := comma_pos + 1;
            comma_pos := instr(reductions, ',', start_pos);
        end loop;
 -- process last item in the list
        reduction := substr(reductions, start_pos);
        if reduction = 'statin' then
            reducedtotalscore := reducedtotalscore + computedscore * 0.25;
        elsif reduction = 'sysBP' then
            sysbpcalculation := computedscore - computedscore * power(0.7, ((systolicbloodpressure - 140) / 10));
            reducedtotalscore := reducedtotalscore + sysbpcalculation;
        elsif reduction = 'aspirin' then
            reducedtotalscore := reducedtotalscore + computedscore * 0.1;
        elsif reduction = 'smoker' then
            reducedtotalscore := reducedtotalscore + computedscore * 0.15;
        end if;
        if round((computedscore - reducedtotalscore), 1) <= lowestscore then
            return round((computedscore - lowestscore), 1);
        end if;
        return round(reducedtotalscore, 1);
    end; ---
    function lowestpossiblerisk(
        age in number,
        race in varchar2,
        gender in varchar2
    ) return number is
    begin
        return ascvd_risk_calculator.computelowestlifetime(age, race, gender) + ascvd_risk_calculator.computelowesttenyear(age, race, gender);
    end;
end ascvd_risk_calculator;
/