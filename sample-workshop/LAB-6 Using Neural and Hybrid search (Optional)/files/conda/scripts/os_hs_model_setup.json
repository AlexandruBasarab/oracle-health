#
# Run the following commands using OCI Opensearch dev tools
#
# List all the model groups in the cluster
# This should list no model groups.
POST /_plugins/_ml/model_groups/_search
{
  "query": {
    "match_all": {}
  }
}
#Search for the clinical trials model group
GET /_plugins/_ml/model_groups/_search
{
  "query": {
    "match": {"name": "Clinical-trials"}
  }
}
# If exists, grab the model_group_id and delete the model group manually
DELETE _plugins/_ml/model_groups/<model_group_id>

# create a model group 
POST /_plugins/_ml/model_groups/_register
{
  "name": "Clinical-trials",
  "description": "A model group for clinical trials local models"
}

# Test to see if the model group is created
# Record the model group id
POST /_plugins/_ml/model_groups/_search
{
  "query": {
    "match_all": {}
  },
  "size": 1000
}

# Register the msmarco-distilbert-base-tas-b model
# Insert the retrieved model group id here & the object store URL 
# Get the downloaded model location from object store in this tenancy - example location below 
# "https://orasenatdpltintegration03.objectstorage.us-chicago-1.oci.customer-oci.com/n/orasenatdpltintegration03/b/clinical-trials/o/sentence-transformers_msmarco-distilbert-base-tas-b-1.0.2-torch_script.zip"
# Alternately the model zip can be downloaded from https://artifacts.opensearch.org/models/ml-models/huggingface/sentence-transformers/msmarco-distilbert-base-tas-b/1.0.2/torch_script/sentence-transformers_msmarco-distilbert-base-tas-b-1.0.2-torch_script.zip
# and copied to an object store bucket
# add the msmarco-distilbert-base-tas-b model

POST /_plugins/_ml/models/_register
{
  "model_group_id": "<model_group_id>",
  "name": "sentence-transformers/msmarco-distilbert-base-tas-b",
    "version": "1.0.2",
    "description": "This is a port of the DistilBert TAS-B Model to sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and is optimized for the task of semantic search. This model version automatically truncates to a maximum of 512 tokens.",
    "model_format": "TORCH_SCRIPT",
    "model_task_type": "TEXT_EMBEDDING",
    "model_config": {
        "model_type": "distilbert",
        "embedding_dimension": 768,
        "framework_type": "sentence_transformers",
        "pooling_mode": "CLS",
        "normalize_result": false,
        "all_config": "{\"_name_or_path\": \"/root/.cache/torch/sentence_transformers/sentence-transformers_msmarco-distilbert-base-tas-b/\", \"activation\": \"gelu\", \"architectures\": [\"DistilBertModel\"], \"attention_dropout\": 0.1, \"dim\": 768, \"dropout\": 0.1, \"hidden_dim\": 3072, \"initializer_range\": 0.02, \"max_position_embeddings\": 512, \"model_type\": \"distilbert\", \"n_heads\": 12, \"n_layers\": 6, \"pad_token_id\": 0, \"qa_dropout\": 0.1, \"seq_classif_dropout\": 0.2, \"sinusoidal_pos_embds\": false, \"tie_weights_\": true, \"torch_dtype\": \"float32\", \"transformers_version\": \"4.33.2\", \"vocab_size\": 30522}"
    },
    "model_content_size_in_bytes": 266363799,
    "model_content_hash_value": "54ee88869b39f0b7d7cede249409286333d152a49146259d271041fef5d39f03",
    "url_connector": {
        "protocol": "oci_sigv1",
        "parameters": {
            "auth_type": "resource_principal"
        },
        "actions": [
            {
                "method": "GET",
                "action_type": "DOWNLOAD",
                "url": "oci_model_location_url"
            }
        ]
    }
}

# Retrieve the task_id for the model create submission
GET /_plugins/_ml/tasks/<task_id>
# Get the model_id from the completed task
POST /_plugins/_ml/models/<model_id>/_deploy
#Verify the model_id again from the model deployment using the deploy task id
GET /_plugins/_ml/tasks/<model_deploy_task_id>
# Test to see the embedding model works
POST /_plugins/_ml/_predict/text_embedding/<model_id>
{
  "text_docs":["hellow world", "new message", "this too"]
}
#Checking that the newly created model exist
POST /_plugins/_ml/models/_search
{
  "query": {
    "match_all": {}
  },
  "size": 1000
}
